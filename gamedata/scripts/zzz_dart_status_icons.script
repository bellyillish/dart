local Module = dart_module


local mod = "STATUS_ICONS"
local log = Module.createLogger(mod)


if Module.isDisabled(mod) then
  log("Disabled, skipping UIIndicators:InitControls()")
else
  log("Overriding UIIndicators:InitControls()")


  -- strips the ratio and scale adjustments out of the base method and
  -- forces it to respect the values defined in the XML
  function alticons.actor_status.UIIndicators:InitControls()
    self.offset     = 2
    self.timeOffset = 15

    local xml = utils_xml.get_hud_xml()

    local time_xml = CScriptXmlInit()
    time_xml:ParseFile("actor_menu.xml")

    self.dialog = xml:InitStatic("indicators", self)
    self.dialog:Show(false)

    for i = 1, size_table(actor_status.indicators) do
      self.slot[i] = {
        back_s    = xml:InitStatic("indicators:static", self.dialog),
        back_f    = xml:InitStatic("indicators:flashing", self.dialog),
        icon_s    = xml:InitStatic("indicators:static", self.dialog),
        icon_f    = xml:InitStatic("indicators:flashing", self.dialog),
        xcvb_time = time_xml:InitTextWnd("quick_slot3_text", self),
      }

      for _, el in pairs(self.slot[i]) do
        el:SetWndPos(vector2():set(
          (el:GetWidth() + self.offset) * (self.mirroed and 1 - i or i - 1),
          0
        ))
      end

      local dialog_pos  = self.dialog:GetWndPos()
      local icon_pos    = self.slot[i].icon_f:GetWndPos()
      local icon_width  = self.slot[i].icon_f:GetWidth()
      local self_height = self.slot[i].xcvb_time:GetHeight()

      self.slot[i].xcvb_time:SetWndPos(vector2():set(
        dialog_pos.x + icon_pos.x,
        dialog_pos.y + icon_pos.y - self.timeOffset
      ))

      self.slot[i].xcvb_time:SetWndSize(vector2():set(
        icon_width,
        self_height
      ))

      self.slot[i].xcvb_time:SetText("")
    end
  end
end
